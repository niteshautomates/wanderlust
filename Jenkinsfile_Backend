pipeline {
    agent any
    tools {
        nodejs 'nodejs'
    }
    environment {
        SONAR_SCANNER_HOME = tool 'SonarQube'
    }
    stages {
        stage('Git Checkout') {
            steps {
                cleanWs()
                git branch: 'devops', url: 'https://github.com/niteshautomates/wanderlust.git'
            }
        }
        stage('Install dependencies') {
            steps {
                dir('backend') {
                    sh 'npm install'
                }
            }
        }
        stage('Test') {
            steps {
                dir('backend') {
                    sh 'npm run test'
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'sonar-token') {
                        sh '''
                        ${SONAR_SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectKey=Wonderlust-Backend -Dsonar.sources=backend/ -Dsonar.test.inclusions=**/*.test.js \
                        -Dsonar.javascript.lcov.reportPaths=reports/lcov.info
                        '''
                    }
                }
            }
        }
        /*  stage("Quality Gate") {
    steps {
        script {
            timeout(time: 3, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
            }
        }
    }
}*/
              stage('NPM Publish'){
            steps{
                dir('backend'){
                    configFileProvider([configFile(fileId: 'npmrc', targetLocation: '.')]) {
                    sh 'npm publish'
                    }
                }
            }
        }
        stage('Trivy File Scan') {
            steps {
                sh 'trivy fs -s CRITICAL .'
            }
        }
        stage('Build Docker Image') {
            steps {
                dir('backend') {
                withDockerRegistry([credentialsId: 'docker-token', url: 'https://index.docker.io/v1/']) {
                    sh 'docker build -t nitesh2611/wanderlust-backend:latest .'
                    sh 'docker push nitesh2611/wanderlust-backend:latest'
                }
                }
            }
        }
    }
}
